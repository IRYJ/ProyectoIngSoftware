//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Proyecto_Ing.Software.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProyectoIngSoftwareEntities1 : DbContext
    {
        public ProyectoIngSoftwareEntities1()
            : base("name=ProyectoIngSoftwareEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int spCrearUsuario(string nombreCompleto, Nullable<System.DateTime> fechaNacimiento, string numeroTelefono, string email, string pais, string ciudad, string codigoPostal, string direccion, string usuario, string clave, string empleado)
        {
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("nombreCompleto", nombreCompleto) :
                new ObjectParameter("nombreCompleto", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("fechaNacimiento", fechaNacimiento) :
                new ObjectParameter("fechaNacimiento", typeof(System.DateTime));
    
            var numeroTelefonoParameter = numeroTelefono != null ?
                new ObjectParameter("numeroTelefono", numeroTelefono) :
                new ObjectParameter("numeroTelefono", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("pais", pais) :
                new ObjectParameter("pais", typeof(string));
    
            var ciudadParameter = ciudad != null ?
                new ObjectParameter("ciudad", ciudad) :
                new ObjectParameter("ciudad", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("codigoPostal", codigoPostal) :
                new ObjectParameter("codigoPostal", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(string));
    
            var empleadoParameter = empleado != null ?
                new ObjectParameter("empleado", empleado) :
                new ObjectParameter("empleado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCrearUsuario", nombreCompletoParameter, fechaNacimientoParameter, numeroTelefonoParameter, emailParameter, paisParameter, ciudadParameter, codigoPostalParameter, direccionParameter, usuarioParameter, claveParameter, empleadoParameter);
        }
    
        public virtual ObjectResult<spLogin_Result> spLogin(string email, string clave)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spLogin_Result>("spLogin", emailParameter, claveParameter);
        }
    
        public virtual int spFeedback(Nullable<int> idPersona, string email, string comentario)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var comentarioParameter = comentario != null ?
                new ObjectParameter("Comentario", comentario) :
                new ObjectParameter("Comentario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFeedback", idPersonaParameter, emailParameter, comentarioParameter);
        }
    
        public virtual int spEditarClave(Nullable<int> idPersona, string clave)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEditarClave", idPersonaParameter, claveParameter);
        }
    
        public virtual int spEditarPerfil(Nullable<int> idPersona, string nombreCompleto, string numeroTelefono, string pais, string ciudad, string codigoPostal, string direccion)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("nombreCompleto", nombreCompleto) :
                new ObjectParameter("nombreCompleto", typeof(string));
    
            var numeroTelefonoParameter = numeroTelefono != null ?
                new ObjectParameter("numeroTelefono", numeroTelefono) :
                new ObjectParameter("numeroTelefono", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("pais", pais) :
                new ObjectParameter("pais", typeof(string));
    
            var ciudadParameter = ciudad != null ?
                new ObjectParameter("ciudad", ciudad) :
                new ObjectParameter("ciudad", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("codigoPostal", codigoPostal) :
                new ObjectParameter("codigoPostal", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEditarPerfil", idPersonaParameter, nombreCompletoParameter, numeroTelefonoParameter, paisParameter, ciudadParameter, codigoPostalParameter, direccionParameter);
        }
    
        public virtual ObjectResult<spConsultarUsuarios_Result> spConsultarUsuarios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultarUsuarios_Result>("spConsultarUsuarios");
        }
    
        public virtual ObjectResult<spConsultarAdmin_Result> spConsultarAdmin(Nullable<int> idPersona)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spConsultarAdmin_Result>("spConsultarAdmin", idPersonaParameter);
        }
    
        public virtual int spActivarUsuario(Nullable<int> idPersona)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spActivarUsuario", idPersonaParameter);
        }
    
        public virtual int spInactivarUsuario(Nullable<int> idPersona)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInactivarUsuario", idPersonaParameter);
        }
    
        public virtual int spSuspenderUsuario(Nullable<int> idPersona)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSuspenderUsuario", idPersonaParameter);
        }
    
        public virtual int spEditarAdmin(Nullable<int> idPersona, string nombreCompleto, Nullable<System.DateTime> fechaNacimiento, string numeroTelefono, string email, string pais, string ciudad, string codigoPostal, string direccion, string clave)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("nombreCompleto", nombreCompleto) :
                new ObjectParameter("nombreCompleto", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("fechaNacimiento", fechaNacimiento) :
                new ObjectParameter("fechaNacimiento", typeof(System.DateTime));
    
            var numeroTelefonoParameter = numeroTelefono != null ?
                new ObjectParameter("numeroTelefono", numeroTelefono) :
                new ObjectParameter("numeroTelefono", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("pais", pais) :
                new ObjectParameter("pais", typeof(string));
    
            var ciudadParameter = ciudad != null ?
                new ObjectParameter("ciudad", ciudad) :
                new ObjectParameter("ciudad", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("codigoPostal", codigoPostal) :
                new ObjectParameter("codigoPostal", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEditarAdmin", idPersonaParameter, nombreCompletoParameter, fechaNacimientoParameter, numeroTelefonoParameter, emailParameter, paisParameter, ciudadParameter, codigoPostalParameter, direccionParameter, claveParameter);
        }
    
        public virtual int sspEliminarUsuario(Nullable<int> idPersona)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sspEliminarUsuario", idPersonaParameter);
        }
    }
}
